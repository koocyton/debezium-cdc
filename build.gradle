allprojects {
	group 'com.doopp.cdc'
	version '1.0'
	apply plugin: 'java'
	apply plugin: 'application'
}

// 所有子项目的通用配置
subprojects {
    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
	ext {
		springVersion = '5.2.8.RELEASE'
		undertowVersion = '2.1.3.Final'
		jacksonVersion = '2.12.1'
		mapstructVersion = '1.3.1.Final'
		lombokVersion = '1.18.8'
		slf4jVersion = '1.8.0-beta4'
		log4jVersion = '2.14.1'
	}
	repositories {
		// mavenLocal()
		// maven{ url 'https://repo1.maven.org/maven2'}
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url 'https://maven.aliyun.com/repository/public' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		// maven { url 'https://jitpack.io' }
	}
	dependencies {
	}
	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}
}

project(':cdc-server') {

	dependencies {
		// spring core
		compile "org.springframework:spring-core:$springVersion"
		compile "org.springframework:spring-aop:$springVersion"
		compile "org.springframework:spring-context:$springVersion"
		compile "org.springframework:spring-context-support:$springVersion"
		compile "org.springframework:spring-beans:$springVersion"
		compile "org.springframework:spring-web:$springVersion"
		compile "org.springframework:spring-webmvc:$springVersion"
		compile "org.springframework:spring-expression:$springVersion"
		compile "org.springframework:spring-tx:$springVersion"
		compile "org.springframework:spring-jdbc:$springVersion"
		compile "org.springframework:spring-test:$springVersion"

		// JSON
		compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
		compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
		compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

		// undertow
		compile "io.undertow:undertow-core:${undertowVersion}"
		compile "io.undertow:undertow-servlet:${undertowVersion}"

		// Util
		compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
		annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		compile "com.google.code.findbugs:annotations:3.0.1"

		// okhttp3
		compile "com.squareup.okhttp3:okhttp:4.0.1"

		// slf4j
		compile "org.slf4j:slf4j-api:${slf4jVersion}"
		compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"

		testCompile "junit:junit:4.12"
	}

	sourceSets {
		mainClassName = "com.doopp.cdc.server.KTApplication" as SourceSet
	}

	jar {
		manifest {
			attributes(
					"Manifest-Version": 1.0,
					"Main-Class": "com.doopp.cdc.server.KTApplication",
					"Class-Path": "./",
					"Implementation-Title": "Gradle"
			)
		}
		from {
			configurations.compile.collect {
				it.isDirectory() ? it : zipTree(it)
			}
		}
		// transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
	}
	task clear(type:Delete){
		// delete 'build','target'
	}
	task release(type: Copy, dependsOn: [clear, jar]) {
	}
}
